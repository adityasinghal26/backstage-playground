# kubernetes/postgres.yaml
apiVersion: {{ .Values.deployment.apiVersion }}
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    backstage.io/kubernetes-id: {{ .Values.backstage.kubernetesId }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
        backstage.io/kubernetes-id: {{ .Values.backstage.kubernetesId }}
    spec:
      containers:
        - name: {{ .Values.container.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: 'IfNotPresent'
          ports:
            - containerPort: {{ .Values.container.port }}
          envFrom:
            - secretRef:
                name: postgres-secrets
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-storage-claim